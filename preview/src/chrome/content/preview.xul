<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/content/xul.css" type="text/css"?>
<?xml-stylesheet href="chrome://browser/skin/browser.css" type="text/css"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<!DOCTYPE window [
<!ENTITY % browserDTD SYSTEM "chrome://browser/locale/browser.dtd">
%browserDTD;
]>
<xul:window id="SeLitePreview" xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" xmlns="http://www.w3.org/1999/xhtml">
    <html>
        <head>  
            <!-- Knowledge from showing Preview via XUL:

                 We could use <title>, but no xul:title. Instead, we set title in Javascript through document.title.
                If the root element is <xul:window>, but not <window> (i.e. not HTML window), then
                    1. preview.js can set the window's title
                    2. default background is gray rather than white
                    3. we can use onload="..." (not xul:onload="...")
                
                With iframe.setAttribute( "src", "data:text/html," + encodeURIComponent(html) ) I've tried handlers for load, pageshow on contentWindow.wrappedJSObject, contentWindow, contentWindow.wrappedJSObject.document. None worked.
                With na iframe in XUL, call its functions as iframe.contentWindow.wrappedJSObject.functionName(...).
                
                There was no way to detect in XUL whether an iframe was loaded already. Hence it used a loop via setTimeout():
                    var invokeSeLitePreviewInitialize= function invokeSeLitePreviewInitialize() {
                        if (typeof iframe.contentWindow.wrappedJSObject.seLitePreviewInitialize === 'function') {
                            iframe.contentWindow.wrappedJSObject.seLitePreviewInitialize(...);
                        }
                        else {
                            // See comments in ../../../dev/content_iframe_test.js.
                            // Don't use iframe.contentWindow.wrappedJSObject.setTimeout(). Instead, use setTimeout().
                            setTimeout( invokeSeLitePreviewInitialize, 100 );
                        }
                    };
                    invokeSeLitePreviewInitialize();
            -->
            <script type="text/javascript" src="preview.js"></script>
        </head>
        <body>
            <iframe type="content" id="iframe" width="100%" height="100%" frameborder="0" marginheight="0" marginwidth="0"></iframe>
        </body>
    </html>
            <!--<browser type="content" id="iframe" src="file:///D:/localdata/pkehl/LinkedIn/shared_connections_preview.html" flex="1"/>-->
</xul:window>