<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<overlay id="selite_core_loader_extension_loader_overlay"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         xmlns:html="http://www.w3.org/1999/xhtml">
    <script type="application/x-javascript" src="chrome://selenium-ide/content/api.js"/>
    <html:script type="application/javascript">
        //<![CDATA[
        /*  Copyright 2013 Peter Kehl
            This file is part of SeLite Core Loader.

            SeLite Core Loader is free software: you can redistribute it and/or modify
            it under the terms of the GNU General Public License as published by
            the Free Software Foundation, either version 3 of the License, or
            (at your option) any later version.

            SeLite Core Loader is distributed in the hope that it will be useful,
            but WITHOUT ANY WARRANTY; without even the implied warranty of
            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
            GNU General Public License for more details.

            You should have received a copy of the GNU General Public License
            along with SeLite Core Loader.  If not, see <http://www.gnu.org/licenses/>.
        */
        "use strict";
        Components.utils.import("chrome://selite-core-loader/content/SeLiteCoreLoader.js");
        Components.utils.import("resource://gre/modules/AddonManager.jsm");

        AddonManager.getAllAddons(
        function(aAddons) {
            try {
                var pluginIds= SeLiteCoreLoader.sortedPluginIds();
            }
            catch(e) {
                alert(e);
                return;
            }
            var failed= {}; // { string failed pluginId => exception }
            for( var i=0; i<pluginIds.length; i++ ) {
                var pluginId= pluginIds[i];
                var url= SeLiteCoreLoader.plugins[pluginId].url;
                if( url ) {
                    try {
                        var ide_api = new API();
                        ide_api.addPlugin(pluginId);
                        ide_api.addPluginProvidedUserExtension( url );
                    }
                    catch(e) {
                        failed[pluginId]= e;
                    }
                }
            }
            if( Object.keys(failed).length ) {
                messageItems= [];
                for( var pluginId in failed ) {
                    messageItems.push( pluginId+ ': ' + failed[pluginId] );
                }
                alert( "SeLiteCoreLoader couldn't load plugin(s): " +messageItems+ "." );
            }
        });
        //]]>
    </html:script>
</overlay>
